{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,cAG/BH,EAAKC,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAASC,OAAOR,EAAKC,KAAKQ,SAASF,OAAOG,OAC1CC,EAAYH,OAAOR,EAAKC,KAAKQ,SAASG,KAAKF,OAC3CG,EAAQL,OAAOR,EAAKC,KAAKQ,SAASK,MAAMJ,OAE1CK,EAAU,EAEdC,YAAW,WACT,KAAIT,GAAU,GAAd,CAoBAU,IACA,IAAIC,EAAUC,YAAYF,EAAIN,EApB5B,CAEF,SAASM,IAsBb,IAAuBG,EAAUN,GAAVM,EArBHL,EAqBaD,EArBJH,EAsBpB,IAAIU,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEF,WAAUN,UAGpBS,EAAO,CAAEH,WAAUN,S,KA5BhBY,MAAK,SAAAC,G,IAAGP,EAAQO,EAARP,SAAUN,EAAKa,EAALb,MACjBc,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfX,EAAS,QAAYW,OAANjB,EAAM,M,IAGjDkB,OAAM,SAAAL,G,IAAGP,EAAQO,EAARP,SAAUN,EAAKa,EAALb,MAClBc,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfX,EAAS,QAAYW,OAANjB,EAAM,M,IAG7CC,IAAYR,GACd2B,cAAchB,GAEhBH,G,IAIDF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const amount = Number(refs.form.elements.amount.value);\n  const delayStep = Number(refs.form.elements.step.value);\n  const delay = Number(refs.form.elements.delay.value);\n\n  let current = 1;\n\n  setTimeout(() => {\n    if (amount <= 0) {\n      return;\n    }\n    function go() {\n      createPromise(current, delayStep)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      if (current === amount) {\n        clearInterval(timerId);\n      }\n      current++;\n    }\n    go();\n    let timerId = setInterval(go, delayStep);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","amount","Number","elements","value","delayStep","step","delay1","delay","current","setTimeout","go","timerId","setInterval","position","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval"],"version":3,"file":"03-promises.4bbfd00c.js.map"}